Index: validator/src/test/java/com/hack/validator/FileTopicTest.java
===================================================================
--- validator/src/test/java/com/hack/validator/FileTopicTest.java	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ validator/src/test/java/com/hack/validator/FileTopicTest.java	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
@@ -1,39 +0,0 @@
-package com.hack.validator;
-
-import com.hack.validator.model.File;
-import org.junit.jupiter.api.Test;
-import org.junit.jupiter.api.extension.ExtendWith;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.boot.test.context.SpringBootTest;
-import org.springframework.kafka.core.DefaultKafkaProducerFactory;
-import org.springframework.kafka.core.KafkaTemplate;
-import org.springframework.kafka.test.EmbeddedKafkaBroker;
-import org.springframework.kafka.test.context.EmbeddedKafka;
-import org.springframework.kafka.test.utils.KafkaTestUtils;
-import org.springframework.test.context.junit.jupiter.SpringExtension;
-import org.springframework.test.context.junit.jupiter.SpringJUnitConfig;
-
-import java.util.Date;
-import java.util.Map;
-
-@ExtendWith(SpringExtension.class)
-@EmbeddedKafka(topics = "file_topic")
-class FileTopicTest {
-
-    @Autowired
-    private EmbeddedKafkaBroker embeddedKafkaBroker;
-//    @Autowired
-//    private KafkaTemplate<String, File> template;
-
-    @Test
-    void test() {
-        Map<String, Object> params = KafkaTestUtils.senderProps(embeddedKafkaBroker.getBrokersAsString());
-        KafkaTemplate<String, File> template = new KafkaTemplate<>(new DefaultKafkaProducerFactory<>(params));
-
-        File data = new File();
-        data.setTimeDevice(new Date().getTime());
-
-        template.setDefaultTopic("file_topic");
-        template.sendDefault(data);
-    }
-}
Index: bin/kafka_2.12-1.1.0/bin/kafka-verifiable-consumer.sh
===================================================================
--- bin/kafka_2.12-1.1.0/bin/kafka-verifiable-consumer.sh	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/bin/kafka_2.12-1.1.0/bin/kafka-verifiable-consumer.sh	(date 1553176400161)
@@ -1,0 +1,0 @@
Index: bin/kafka_2.12-1.1.0/bin/kafka-simple-consumer-shell.sh
===================================================================
--- bin/kafka_2.12-1.1.0/bin/kafka-simple-consumer-shell.sh	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/bin/kafka_2.12-1.1.0/bin/kafka-simple-consumer-shell.sh	(date 1553176400161)
@@ -1,0 +1,0 @@
Index: bin/kafka_2.12-1.1.0/bin/kafka-producer-perf-test.sh
===================================================================
--- bin/kafka_2.12-1.1.0/bin/kafka-producer-perf-test.sh	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/bin/kafka_2.12-1.1.0/bin/kafka-producer-perf-test.sh	(date 1553176400160)
@@ -1,0 +1,0 @@
Index: bin/kafka_2.12-1.1.0/bin/zookeeper-server-start.sh
===================================================================
--- bin/kafka_2.12-1.1.0/bin/zookeeper-server-start.sh	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/bin/kafka_2.12-1.1.0/bin/zookeeper-server-start.sh	(date 1553176400162)
@@ -1,0 +1,0 @@
Index: bin/kafka_2.12-1.1.0/bin/kafka-acls.sh
===================================================================
--- bin/kafka_2.12-1.1.0/bin/kafka-acls.sh	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/bin/kafka_2.12-1.1.0/bin/kafka-acls.sh	(date 1553176400158)
@@ -1,0 +1,0 @@
Index: bin/kafka_2.12-1.1.0/bin/kafka-server-start.sh
===================================================================
--- bin/kafka_2.12-1.1.0/bin/kafka-server-start.sh	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/bin/kafka_2.12-1.1.0/bin/kafka-server-start.sh	(date 1553176400160)
@@ -1,0 +1,0 @@
Index: bin/kafka_2.12-1.1.0/bin/kafka-preferred-replica-election.sh
===================================================================
--- bin/kafka_2.12-1.1.0/bin/kafka-preferred-replica-election.sh	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/bin/kafka_2.12-1.1.0/bin/kafka-preferred-replica-election.sh	(date 1553176400160)
@@ -1,0 +1,0 @@
Index: bin/kafka_2.12-1.1.0/bin/kafka-verifiable-producer.sh
===================================================================
--- bin/kafka_2.12-1.1.0/bin/kafka-verifiable-producer.sh	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/bin/kafka_2.12-1.1.0/bin/kafka-verifiable-producer.sh	(date 1553176400161)
@@ -1,0 +1,0 @@
Index: bin/kafka_2.12-1.1.0/bin/kafka-streams-application-reset.sh
===================================================================
--- bin/kafka_2.12-1.1.0/bin/kafka-streams-application-reset.sh	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/bin/kafka_2.12-1.1.0/bin/kafka-streams-application-reset.sh	(date 1553176400161)
@@ -1,0 +1,0 @@
Index: bin/kafka_2.12-1.1.0/bin/kafka-reassign-partitions.sh
===================================================================
--- bin/kafka_2.12-1.1.0/bin/kafka-reassign-partitions.sh	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/bin/kafka_2.12-1.1.0/bin/kafka-reassign-partitions.sh	(date 1553176400160)
@@ -1,0 +1,0 @@
Index: bin/kafka_2.12-1.1.0/bin/kafka-replay-log-producer.sh
===================================================================
--- bin/kafka_2.12-1.1.0/bin/kafka-replay-log-producer.sh	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/bin/kafka_2.12-1.1.0/bin/kafka-replay-log-producer.sh	(date 1553176400160)
@@ -1,0 +1,0 @@
Index: bin/kafka_2.12-1.1.0/bin/zookeeper-server-stop.sh
===================================================================
--- bin/kafka_2.12-1.1.0/bin/zookeeper-server-stop.sh	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/bin/kafka_2.12-1.1.0/bin/zookeeper-server-stop.sh	(date 1553176400162)
@@ -1,0 +1,0 @@
Index: bin/kafka_2.12-1.1.0/bin/kafka-consumer-perf-test.sh
===================================================================
--- bin/kafka_2.12-1.1.0/bin/kafka-consumer-perf-test.sh	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/bin/kafka_2.12-1.1.0/bin/kafka-consumer-perf-test.sh	(date 1553176400159)
@@ -1,0 +1,0 @@
Index: hack.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<module type=\"JAVA_MODULE\" version=\"4\">\n  <component name=\"FacetManager\">\n    <facet type=\"Python\" name=\"Python\">\n      <configuration sdkName=\"\" />\n    </facet>\n  </component>\n  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n    <exclude-output />\n    <content url=\"file://$MODULE_DIR$\">\n      <sourceFolder url=\"file://$MODULE_DIR$/src\" isTestSource=\"false\" />\n    </content>\n    <orderEntry type=\"inheritedJdk\" />\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n  </component>\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- hack.iml	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ hack.iml	(date 1571903103132)
@@ -8,7 +8,7 @@
   <component name="NewModuleRootManager" inherit-compiler-output="true">
     <exclude-output />
     <content url="file://$MODULE_DIR$">
-      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/python/src" isTestSource="false" />
     </content>
     <orderEntry type="inheritedJdk" />
     <orderEntry type="sourceFolder" forTests="false" />
Index: bin/kafka_2.12-1.1.0/bin/zookeeper-security-migration.sh
===================================================================
--- bin/kafka_2.12-1.1.0/bin/zookeeper-security-migration.sh	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/bin/kafka_2.12-1.1.0/bin/zookeeper-security-migration.sh	(date 1553176400162)
@@ -1,0 +1,0 @@
Index: bin/kafka_2.12-1.1.0/bin/trogdor.sh
===================================================================
--- bin/kafka_2.12-1.1.0/bin/trogdor.sh	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/bin/kafka_2.12-1.1.0/bin/trogdor.sh	(date 1553176400161)
@@ -1,0 +1,0 @@
Index: bin/kafka_2.12-1.1.0/bin/kafka-server-stop.sh
===================================================================
--- bin/kafka_2.12-1.1.0/bin/kafka-server-stop.sh	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/bin/kafka_2.12-1.1.0/bin/kafka-server-stop.sh	(date 1553176400161)
@@ -1,0 +1,0 @@
Index: bin/kafka_2.12-1.1.0/bin/kafka-log-dirs.sh
===================================================================
--- bin/kafka_2.12-1.1.0/bin/kafka-log-dirs.sh	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/bin/kafka_2.12-1.1.0/bin/kafka-log-dirs.sh	(date 1553176400159)
@@ -1,0 +1,0 @@
Index: bin/kafka_2.12-1.1.0/bin/connect-distributed.sh
===================================================================
--- bin/kafka_2.12-1.1.0/bin/connect-distributed.sh	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/bin/kafka_2.12-1.1.0/bin/connect-distributed.sh	(date 1553176400158)
@@ -1,0 +1,0 @@
Index: bin/kafka_2.12-1.1.0/bin/kafka-run-class.sh
===================================================================
--- bin/kafka_2.12-1.1.0/bin/kafka-run-class.sh	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/bin/kafka_2.12-1.1.0/bin/kafka-run-class.sh	(date 1553176400160)
@@ -1,0 +1,0 @@
Index: src/file3.json
===================================================================
--- src/file3.json	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/src/file3.json	(date 1569327843817)
@@ -1,0 +1,0 @@
Index: bin/kafka_2.12-1.1.0/bin/zookeeper-shell.sh
===================================================================
--- bin/kafka_2.12-1.1.0/bin/zookeeper-shell.sh	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/bin/kafka_2.12-1.1.0/bin/zookeeper-shell.sh	(date 1553176400162)
@@ -1,0 +1,0 @@
Index: bin/kafka_2.12-1.1.0/bin/kafka-mirror-maker.sh
===================================================================
--- bin/kafka_2.12-1.1.0/bin/kafka-mirror-maker.sh	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/bin/kafka_2.12-1.1.0/bin/kafka-mirror-maker.sh	(date 1553176400159)
@@ -1,0 +1,0 @@
Index: bin/kafka_2.12-1.1.0/bin/kafka-configs.sh
===================================================================
--- bin/kafka_2.12-1.1.0/bin/kafka-configs.sh	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/bin/kafka_2.12-1.1.0/bin/kafka-configs.sh	(date 1553176400158)
@@ -1,0 +1,0 @@
Index: bin/kafka_2.12-1.1.0/bin/kafka-delete-records.sh
===================================================================
--- bin/kafka_2.12-1.1.0/bin/kafka-delete-records.sh	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/bin/kafka_2.12-1.1.0/bin/kafka-delete-records.sh	(date 1553176400159)
@@ -1,0 +1,0 @@
Index: bin/update_container2.sh
===================================================================
--- bin/update_container2.sh	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/bin/update_container2.sh	(date 1569444784177)
@@ -1,6 +1,6 @@
 #!/usr/bin/env bash
 
-container="validator"
+container=$1
 echo 'container: '$container
 container_id=`docker ps -a | grep $container | awk '{print $1}'`
 image_id=`docker images | grep $container | awk '{print $3}'`
Index: bin/kafka_2.12-1.1.0/bin/kafka-replica-verification.sh
===================================================================
--- bin/kafka_2.12-1.1.0/bin/kafka-replica-verification.sh	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/bin/kafka_2.12-1.1.0/bin/kafka-replica-verification.sh	(date 1553176400160)
@@ -1,0 +1,0 @@
Index: python/bin/__init__.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- python/bin/__init__.py	(date 1571903109448)
+++ python/bin/__init__.py	(date 1571903109448)
@@ -0,0 +1,0 @@
Index: python/__init__.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- python/__init__.py	(date 1571903109483)
+++ python/__init__.py	(date 1571903109483)
@@ -0,0 +1,0 @@
Index: docker-compose_scylladb.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- docker-compose_scylladb.yml	(date 1569534005765)
+++ docker-compose_scylladb.yml	(date 1569534005765)
@@ -0,0 +1,33 @@
+version: "3.0"
+
+services:
+
+
+  tests:
+    build:
+      context: ./
+    volumes:
+      - ./:/nis-test
+      #- ./tests/external:/nis-test/pytest/external
+      #- ./logs/tests:/nis-test/logs
+      - ./logs:/logs
+    networks:
+      - nis_net
+
+#  scylla-manager:
+#    image: scylladb/scylla-manager
+#    container_name: scylla-manager
+#    depends_on:
+#      - scylla-manager-db
+#    networks:
+#      - nis_net
+#
+#  scylla-manager-db:
+#    image: scylladb/scylla
+#    container_name: scylla-manager-db
+#    networks:
+#      - nis_net
+
+networks:
+  nis_net:
+    driver: bridge
Index: sleep.sh
===================================================================
--- sleep.sh	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/sleep.sh	(date 1553176410192)
@@ -1,0 +1,0 @@
Index: docker-compose.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>version: \"3.0\"\n\nservices:\n\n\n  tests:\n    build:\n      context: ./\n    volumes:\n      - ./:/nis-test\n      #- ./tests/external:/nis-test/pytest/external\n      #- ./logs/tests:/nis-test/logs\n      - ./logs:/logs\n    networks:\n      - nis_net\n\n  validator:\n    build:\n      context: validator\n    volumes:\n      - ./logs/generator:/tmp\n    networks:\n      - nis_net\n    depends_on:\n      - kafka1\n      - kafka-schema-registry\n\n  schema-registry-ui:\n    image: landoop/schema-registry-ui:latest\n    hostname: kafka-schema-registry-ui\n    ports:\n      - \"8001:8000\"\n    environment:\n      SCHEMAREGISTRY_URL: http://kafka-schema-registry:8081/\n      PROXY: \"true\"\n    depends_on:\n      - kafka-schema-registry\n\n  redis:\n    image: 'bitnami/redis:latest'\n    environment:\n      - REDIS_PASSWORD=redis123\n    container_name: redis\n    ports:\n      - \"6379:6379\"\n    volumes:\n      - ../data/redis:/data\n    restart: always\n    networks:\n      - nis_net\n\n  zoo1:\n    image: confluentinc/cp-zookeeper:latest\n    restart: always\n    ports:\n      - \"2181:2181\"\n    environment:\n      ZOO_MY_ID: 1\n      ZOO_PORT: 2181\n      #ZOO_SERVERS: server.1=zoo1:2888:3888\n      ZOOKEEPER_SERVER_ID: 1\n      ZOOKEEPER_CLIENT_PORT: \"2181\"\n      ZOOKEEPER_TICK_TIME: \"2000\"\n      ZOOKEEPER_SERVERS: \"zoo1:22888:23888\"\n    networks:\n      - nis_net\n\n\n  kafka1:\n    image: confluentinc/cp-kafka:latest\n    hostname: kafka1\n    ports:\n      - \"9092:9092\"\n    environment:\n      # add the entry \"127.0.0.1    kafka1\" to your /etc/hosts file\n      KAFKA_DELETE_TOPIC_ENABLE: \"true\"\n      KAFKA_ADVERTISED_LISTENERS: \"PLAINTEXT://kafka1:9092\"\n      KAFKA_ZOOKEEPER_CONNECT: \"zoo1:2181\"\n      KAFKA_BROKER_ID: 1\n      KAFKA_LOG4J_LOGGERS: \"kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO\"\n      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1\n      KAFKA_SCHEMA_REGISTRY_URL: \"schemaregistry:8081\"\n      KAFKA_AUTO_CREATE_TOPICS_ENABLE: \"true\"\n      KAFKA_MESSAGE_MAX_BYTES: 150000000\n      KAFKA_FETCH_MESSAGE_MAX_BYTES: 15000000\n      KAFKA_REPLICA_FETCH_MAX_BYTES: 15000000\n      KAFKA_MAX_MESSAGE_BYTES: 15000000\n    volumes:\n      - ./full-stack/kafka1/data:/var/lib/kafka/data\n      - ./producer.properties:/etc/kafka/producer.properties\n    depends_on:\n      - zoo1\n    networks:\n      - nis_net\n\n\n  kafka-schema-registry:\n    image: confluentinc/cp-schema-registry:latest\n    restart: always\n    depends_on:\n      - zoo1\n    environment:\n      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: \"PLAINTEXT://kafka1:9092\"\n      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: \"zoo1:2181\"\n      SCHEMA_REGISTRY_HOST_NAME: kafka-schema-registry\n      SCHEMA_REGISTRY_LISTENERS: \"http://0.0.0.0:8081\"\n      PROXY: \"true\"\n    ports:\n      - \"8081:8081\"\n    networks:\n      - nis_net\n\n  kafka-topics-ui:\n    image: landoop/kafka-topics-ui:latest\n    hostname: kafka-topics-ui\n    ports:\n      - \"8010:8000\"\n    environment:\n      KAFKA_REST_PROXY_URL: \"http://kafka-rest-proxy:8082/\"\n      PROXY: \"true\"\n    depends_on:\n      - zoo1\n      - kafka1\n    networks:\n      - nis_net\n\n  kafka-rest-proxy:\n    image: confluentinc/cp-kafka-rest:latest\n    hostname: kafka-rest-proxy\n    ports:\n      - \"8082:8082\"\n    environment:\n      KAFKA_REST_ZOOKEEPER_CONNECT: zoo1:2181\n      KAFKA_REST_LISTENERS: http://0.0.0.0:8082/\n      KAFKA_REST_SCHEMA_REGISTRY_URL: http://kafka-schema-registry:8081/\n      KAFKA_REST_HOST_NAME: kafka-rest-proxy\n      KAFKA_REST_BOOTSTRAP_SERVERS: kafka1:9092\n    depends_on:\n      - zoo1\n      - kafka1\n      - kafka-schema-registry\n    networks:\n      - nis_net\n\nnetworks:\n  nis_net:\n    driver: bridge\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- docker-compose.yml	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ docker-compose.yml	(date 1571916615323)
@@ -5,36 +5,45 @@
 
   tests:
     build:
-      context: ./
+      context: ./python
     volumes:
-      - ./:/nis-test
+      - ./python:/nis-test
       #- ./tests/external:/nis-test/pytest/external
       #- ./logs/tests:/nis-test/logs
-      - ./logs:/logs
+      #- ./logs:/logs
     networks:
       - nis_net
 
-  validator:
+  validator_1:
     build:
       context: validator
-    volumes:
-      - ./logs/generator:/tmp
+   # volumes:
+     # - ./logs/generator:/tmp
     networks:
       - nis_net
     depends_on:
       - kafka1
-      - kafka-schema-registry
 
-  schema-registry-ui:
-    image: landoop/schema-registry-ui:latest
-    hostname: kafka-schema-registry-ui
-    ports:
-      - "8001:8000"
-    environment:
-      SCHEMAREGISTRY_URL: http://kafka-schema-registry:8081/
-      PROXY: "true"
+  validator_2:
+    build:
+      context: validator
+    #volumes:
+      #- ./logs/generator:/tmp
+    networks:
+      - nis_net
     depends_on:
-      - kafka-schema-registry
+      - kafka1
+
+#  schema-registry-ui:
+#    image: landoop/schema-registry-ui:latest
+#    hostname: kafka-schema-registry-ui
+#    ports:
+#      - "8001:8000"
+#    environment:
+#      SCHEMAREGISTRY_URL: http://kafka-schema-registry:8081/
+#      PROXY: "true"
+#    depends_on:
+#      - kafka-schema-registry
 
   redis:
     image: 'bitnami/redis:latest'
@@ -50,7 +59,8 @@
       - nis_net
 
   zoo1:
-    image: confluentinc/cp-zookeeper:latest
+    #image: confluentinc/cp-zookeeper:latest
+    image: wurstmeister/zookeeper:latest
     restart: always
     ports:
       - "2181:2181"
@@ -67,24 +77,29 @@
 
 
   kafka1:
-    image: confluentinc/cp-kafka:latest
+    #image: confluentinc/cp-kafka:latest
+    image: wurstmeister/kafka:latest
     hostname: kafka1
     ports:
       - "9092:9092"
     environment:
       # add the entry "127.0.0.1    kafka1" to your /etc/hosts file
+      KAFKA_LISTENERS: "PLAINTEXT://kafka1:9092"
       KAFKA_DELETE_TOPIC_ENABLE: "true"
-      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka1:9092"
+      #KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka1:9092"
       KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
       KAFKA_BROKER_ID: 1
       KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
       KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
-      KAFKA_SCHEMA_REGISTRY_URL: "schemaregistry:8081"
+#      KAFKA_SCHEMA_REGISTRY_URL: "schemaregistry:8081"
       KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
       KAFKA_MESSAGE_MAX_BYTES: 150000000
       KAFKA_FETCH_MESSAGE_MAX_BYTES: 15000000
       KAFKA_REPLICA_FETCH_MAX_BYTES: 15000000
       KAFKA_MAX_MESSAGE_BYTES: 15000000
+      KAFKA_NUM_PARTITIONS: 10
+      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
+      KAFKA_CREATE_TOPICS: "file-topic:10:1"
     volumes:
       - ./full-stack/kafka1/data:/var/lib/kafka/data
       - ./producer.properties:/etc/kafka/producer.properties
@@ -93,22 +108,47 @@
     networks:
       - nis_net
 
-
-  kafka-schema-registry:
-    image: confluentinc/cp-schema-registry:latest
-    restart: always
+  prometheus:
+    image: prom/prometheus:v2.1.0
+    volumes:
+      - ./prometheus/:/etc/prometheus/
+      - prometheus_data:/prometheus
+    command:
+      - '--config.file=/etc/prometheus/prometheus.yml'
+      - '--storage.tsdb.path=/prometheus'
+      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
+      - '--web.console.templates=/usr/share/prometheus/consoles'
+    ports:
+      - 9090:9090
+    links:
+      - cadvisor:cadvisor
+      - alertmanager:alertmanager
     depends_on:
-      - zoo1
-    environment:
-      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "PLAINTEXT://kafka1:9092"
-      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zoo1:2181"
-      SCHEMA_REGISTRY_HOST_NAME: kafka-schema-registry
-      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"
-      PROXY: "true"
-    ports:
-      - "8081:8081"
+      - cadvisor
     networks:
-      - nis_net
+      - back-tier
+    restart: always
+  #    deploy:
+  #      placement:
+  #        constraints:
+  #          - node.hostname == ${HOSTNAME}
+
+
+#  kafka-schema-registry:
+#    image: confluentinc/cp-schema-registry:latest
+#    restart: always
+#    depends_on:
+#      - zoo1
+#    environment:
+#      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "PLAINTEXT://kafka1:9092"
+#      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zoo1:2181"
+#      SCHEMA_REGISTRY_HOST_NAME: kafka-schema-registry
+#      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"
+#      PROXY: "true"
+#    ports:
+#      - "8081:8081"
+#    networks:
+#      - nis_net
 
   kafka-topics-ui:
     image: landoop/kafka-topics-ui:latest
@@ -132,13 +172,12 @@
     environment:
       KAFKA_REST_ZOOKEEPER_CONNECT: zoo1:2181
       KAFKA_REST_LISTENERS: http://0.0.0.0:8082/
-      KAFKA_REST_SCHEMA_REGISTRY_URL: http://kafka-schema-registry:8081/
+#      KAFKA_REST_SCHEMA_REGISTRY_URL: http://kafka-schema-registry:8081/
       KAFKA_REST_HOST_NAME: kafka-rest-proxy
       KAFKA_REST_BOOTSTRAP_SERVERS: kafka1:9092
     depends_on:
       - zoo1
       - kafka1
-      - kafka-schema-registry
     networks:
       - nis_net
 
Index: Dockerfile
===================================================================
--- Dockerfile	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/Dockerfile	(date 1571903181283)
@@ -47,7 +47,7 @@
 
 RUN mkdir /nis-test
 
-COPY ./src /nis-test
+COPY src /nis-test
 
 RUN ls -la /nis-test
 
Index: bin/clear_and_start.sh
===================================================================
--- bin/clear_and_start.sh	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/bin/clear_and_start.sh	(date 1568994525135)
@@ -1,0 +1,0 @@
Index: bin/xmldiff.py
===================================================================
--- bin/xmldiff.py	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/bin/xmldiff.py	(date 1553176400440)
@@ -1,0 +1,0 @@
Index: bin/avto_consumer.py
===================================================================
--- bin/avto_consumer.py	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/bin/avto_consumer.py	(date 1553176400155)
@@ -1,0 +1,0 @@
Index: bin/update_container.sh
===================================================================
--- bin/update_container.sh	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/bin/update_container.sh	(date 1553176400440)
@@ -1,0 +1,0 @@
Index: bin/create_connect.sh
===================================================================
--- bin/create_connect.sh	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/bin/create_connect.sh	(date 1553176400157)
@@ -1,0 +1,0 @@
Index: bin/consumer.py
===================================================================
--- bin/consumer.py	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/bin/consumer.py	(date 1553176400157)
@@ -1,0 +1,0 @@
Index: bin/producer.py
===================================================================
--- bin/producer.py	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/bin/producer.py	(date 1553176400438)
@@ -1,0 +1,0 @@
Index: validator/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n    <parent>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-parent</artifactId>\n        <version>2.1.8.RELEASE</version>\n        <relativePath/> <!-- lookup parent from repository -->\n    </parent>\n    <groupId>com.hack</groupId>\n    <artifactId>hack-validator</artifactId>\n    <packaging>jar</packaging>\n    <version>0.0.1-SNAPSHOT</version>\n    <name>hack-validator</name>\n    <description>hack-validator</description>\n\n    <properties>\n        <java.version>11</java.version>\n<!--        <maven.compiler.source>1.6</maven.compiler.source>-->\n<!--        <maven.compiler.target>1.6</maven.compiler.target>-->\n    </properties>\n\n    <dependencies>\n        <!-- SPRING -->\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.kafka</groupId>\n            <artifactId>spring-kafka</artifactId>\n        </dependency>\n\n        <!-- CLOUD -->\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-stream-binder-kafka</artifactId>\n            <version>2.2.1.RELEASE</version>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-stream-schema</artifactId>\n            <version>2.2.1.RELEASE</version>\n        </dependency>\n\n        <!-- KAFKA -->\n        <dependency>\n            <groupId>io.confluent</groupId>\n            <artifactId>kafka-avro-serializer</artifactId>\n            <version>5.3.1</version>\n        </dependency>\n\n        <dependency>\n            <groupId>org.apache.avro</groupId>\n            <artifactId>avro</artifactId>\n            <version>1.9.1</version>\n        </dependency>\n        <!-- LOGGING -->\n        <!-- Logback dependencies -->\n        <dependency>\n            <groupId>ch.qos.logback</groupId>\n            <artifactId>logback-classic</artifactId>\n            <version>${logback.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>ch.qos.logback</groupId>\n            <artifactId>logback-core</artifactId>\n            <version>${logback.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>ch.qos.logback</groupId>\n            <artifactId>logback-access</artifactId>\n            <version>${logback.version}</version>\n        </dependency>\n\n        <!-- TEST -->\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-test</artifactId>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.kafka</groupId>\n            <artifactId>spring-kafka-test</artifactId>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.junit.jupiter</groupId>\n            <artifactId>junit-jupiter</artifactId>\n            <version>5.5.2</version>\n            <scope>test</scope>\n        </dependency>\n    </dependencies>\n\n    <repositories>\n        <repository>\n            <id>confluent</id>\n            <url>https://packages.confluent.io/maven/</url>\n        </repository>\n    </repositories>\n\n    <build>\n        <finalName>hack-validator</finalName>\n        <plugins>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.avro</groupId>\n                <artifactId>avro-maven-plugin</artifactId>\n                <version>1.9.1</version>\n                <executions>\n                    <execution>\n                        <id>schemas</id>\n                        <phase>generate-sources</phase>\n                        <goals>\n                            <goal>schema</goal>\n                            <goal>protocol</goal>\n                            <goal>idl-protocol</goal>\n                        </goals>\n                        <configuration>\n                            <sourceDirectory>${project.basedir}/src/main/resources/avro/</sourceDirectory>\n                            <outputDirectory>${project.basedir}/src/main/java/</outputDirectory>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n        </plugins>\n    </build>\n\n</project>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- validator/pom.xml	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ validator/pom.xml	(date 1571907650255)
@@ -19,10 +19,25 @@
         <java.version>11</java.version>
 <!--        <maven.compiler.source>1.6</maven.compiler.source>-->
 <!--        <maven.compiler.target>1.6</maven.compiler.target>-->
+        <sleuth.version>2.1.4.RELEASE</sleuth.version>
+
     </properties>
 
     <dependencies>
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-sleuth</artifactId>
+            <version>2.1.4.RELEASE</version>
+        </dependency>
         <!-- SPRING -->
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-web</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-actuator</artifactId>
+        </dependency>
         <dependency>
             <groupId>org.springframework.boot</groupId>
             <artifactId>spring-boot-starter</artifactId>
@@ -44,18 +59,6 @@
             <version>2.2.1.RELEASE</version>
         </dependency>
 
-        <!-- KAFKA -->
-        <dependency>
-            <groupId>io.confluent</groupId>
-            <artifactId>kafka-avro-serializer</artifactId>
-            <version>5.3.1</version>
-        </dependency>
-
-        <dependency>
-            <groupId>org.apache.avro</groupId>
-            <artifactId>avro</artifactId>
-            <version>1.9.1</version>
-        </dependency>
         <!-- LOGGING -->
         <!-- Logback dependencies -->
         <dependency>
@@ -106,26 +109,6 @@
             <plugin>
                 <groupId>org.springframework.boot</groupId>
                 <artifactId>spring-boot-maven-plugin</artifactId>
-            </plugin>
-            <plugin>
-                <groupId>org.apache.avro</groupId>
-                <artifactId>avro-maven-plugin</artifactId>
-                <version>1.9.1</version>
-                <executions>
-                    <execution>
-                        <id>schemas</id>
-                        <phase>generate-sources</phase>
-                        <goals>
-                            <goal>schema</goal>
-                            <goal>protocol</goal>
-                            <goal>idl-protocol</goal>
-                        </goals>
-                        <configuration>
-                            <sourceDirectory>${project.basedir}/src/main/resources/avro/</sourceDirectory>
-                            <outputDirectory>${project.basedir}/src/main/java/</outputDirectory>
-                        </configuration>
-                    </execution>
-                </executions>
             </plugin>
         </plugins>
     </build>
Index: validator/src/main/java/com/hack/validator/config/SchemaRegistryConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.hack.validator.config;\n\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.cloud.stream.schema.client.ConfluentSchemaRegistryClient;\nimport org.springframework.cloud.stream.schema.client.SchemaRegistryClient;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\n\n@Configuration\npublic class SchemaRegistryConfig {\n\n    @Value(value = \"${spring.cloud.stream.kafka.binder.consumer-properties.schema.registry.url}\")\n    private String endPoint;\n\n    @Bean\n    public SchemaRegistryClient schemaRegistryClient() {\n        ConfluentSchemaRegistryClient client = new ConfluentSchemaRegistryClient();\n        client.setEndpoint(endPoint);\n        return client;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- validator/src/main/java/com/hack/validator/config/SchemaRegistryConfig.java	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ validator/src/main/java/com/hack/validator/config/SchemaRegistryConfig.java	(date 1571906527263)
@@ -6,7 +6,7 @@
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;
 
-@Configuration
+//@Configuration
 public class SchemaRegistryConfig {
 
     @Value(value = "${spring.cloud.stream.kafka.binder.consumer-properties.schema.registry.url}")
Index: validator/src/main/java/com/hack/validator/listener/FileConsumer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.hack.validator.listener;\n\nimport com.hack.validator.model.File;\nimport org.springframework.cloud.stream.messaging.Processor;\nimport org.springframework.kafka.annotation.KafkaListener;\nimport org.springframework.stereotype.Component;\n\n@Component\npublic class FileConsumer {\n\n    @KafkaListener(topics = Processor.INPUT)\n    public void consume(File file) {\n        System.out.println(\"Received: \" + file);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- validator/src/main/java/com/hack/validator/listener/FileConsumer.java	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ validator/src/main/java/com/hack/validator/listener/FileConsumer.java	(date 1571906664220)
@@ -1,6 +1,6 @@
 package com.hack.validator.listener;
 
-import com.hack.validator.model.File;
+import org.springframework.cloud.stream.annotation.StreamListener;
 import org.springframework.cloud.stream.messaging.Processor;
 import org.springframework.kafka.annotation.KafkaListener;
 import org.springframework.stereotype.Component;
@@ -8,8 +8,11 @@
 @Component
 public class FileConsumer {
 
-    @KafkaListener(topics = Processor.INPUT)
-    public void consume(File file) {
+    //@KafkaListener(topics = Processor.INPUT)
+    @StreamListener(value = Processor.INPUT)
+    public void consume(String file) {
         System.out.println("Received: " + file);
     }
+
+
 }
Index: validator/src/main/resources/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>spring:\n  kafka:\n    bootstrap-servers: kafka1:9092\n    client-id: 1\n    consumer:\n      group-id: file-consumer-group\n  cloud:\n    stream:\n      bindings:\n        input:\n          destination: file-topic\n          content-type: application/*+avro\n        output:\n          destination: file-topic-non-dup\n          content-type: application/*+avro\n      kafka:\n        binder:\n          producer-properties:\n            key.serializer: io.confluent.kafka.serializers.KafkaAvroSerializer\n            value.serializer: io.confluent.kafka.serializers.KafkaAvroSerializer\n            schema.registry.url: http://kafka-schema-registry:8081\n          consumer-properties:\n            key.deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer\n            value.deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer\n            schema.registry.url: http://kafka-schema-registry:8081\n            specific.avro.reader: true\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- validator/src/main/resources/application.yml	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ validator/src/main/resources/application.yml	(date 1571909576220)
@@ -1,26 +1,26 @@
 spring:
   kafka:
     bootstrap-servers: kafka1:9092
-    client-id: 1
+    client-id: ${random.uuid}
+    group.id: file-consumer-group
     consumer:
-      group-id: file-consumer-group
+      group.id: file-consumer-group
   cloud:
     stream:
       bindings:
         input:
           destination: file-topic
-          content-type: application/*+avro
+          content-type: application/text
+          group: file-consumer-group
         output:
           destination: file-topic-non-dup
-          content-type: application/*+avro
+          content-type: application/text
       kafka:
         binder:
           producer-properties:
-            key.serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
-            value.serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
-            schema.registry.url: http://kafka-schema-registry:8081
+            key.serializer: org.apache.kafka.common.serialization.StringSerializer
+            value.serializer: org.apache.kafka.common.serialization.StringSerializer
           consumer-properties:
-            key.deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
-            value.deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
-            schema.registry.url: http://kafka-schema-registry:8081
-            specific.avro.reader: true
+            key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
+            value.deserializer: org.apache.kafka.common.serialization.StringDeserializer
+            group.id: file-consumer-group
Index: bin/kafka_2.12-1.1.0/config/connect-file-source.properties
===================================================================
--- bin/kafka_2.12-1.1.0/config/connect-file-source.properties	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/bin/kafka_2.12-1.1.0/config/connect-file-source.properties	(date 1553176400163)
@@ -1,0 +1,0 @@
Index: bin/kafka_2.12-1.1.0/config/connect-console-sink.properties
===================================================================
--- bin/kafka_2.12-1.1.0/config/connect-console-sink.properties	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/bin/kafka_2.12-1.1.0/config/connect-console-sink.properties	(date 1553176400162)
@@ -1,0 +1,0 @@
Index: bin/kafka_2.12-1.1.0/config/server.properties
===================================================================
--- bin/kafka_2.12-1.1.0/config/server.properties	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/bin/kafka_2.12-1.1.0/config/server.properties	(date 1553176400164)
@@ -1,0 +1,0 @@
Index: bin/kafka_2.12-1.1.0/config/zookeeper.properties
===================================================================
--- bin/kafka_2.12-1.1.0/config/zookeeper.properties	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/bin/kafka_2.12-1.1.0/config/zookeeper.properties	(date 1553176400164)
@@ -1,0 +1,0 @@
Index: bin/kafka_2.12-1.1.0/config/connect-console-source.properties
===================================================================
--- bin/kafka_2.12-1.1.0/config/connect-console-source.properties	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/bin/kafka_2.12-1.1.0/config/connect-console-source.properties	(date 1553176400162)
@@ -1,0 +1,0 @@
Index: bin/kafka_2.12-1.1.0/config/log4j.properties
===================================================================
--- bin/kafka_2.12-1.1.0/config/log4j.properties	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/bin/kafka_2.12-1.1.0/config/log4j.properties	(date 1553176400163)
@@ -1,0 +1,0 @@
Index: bin/kafka_2.12-1.1.0/config/connect-standalone.properties
===================================================================
--- bin/kafka_2.12-1.1.0/config/connect-standalone.properties	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/bin/kafka_2.12-1.1.0/config/connect-standalone.properties	(date 1553176400163)
@@ -1,0 +1,0 @@
Index: bin/kafka_2.12-1.1.0/config/consumer.properties
===================================================================
--- bin/kafka_2.12-1.1.0/config/consumer.properties	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/bin/kafka_2.12-1.1.0/config/consumer.properties	(date 1553176400163)
@@ -1,0 +1,0 @@
Index: bin/kafka_2.12-1.1.0/config/tools-log4j.properties
===================================================================
--- bin/kafka_2.12-1.1.0/config/tools-log4j.properties	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/bin/kafka_2.12-1.1.0/config/tools-log4j.properties	(date 1553176400164)
@@ -1,0 +1,0 @@
Index: bin/kafka_2.12-1.1.0/config/producer.properties
===================================================================
--- bin/kafka_2.12-1.1.0/config/producer.properties	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/bin/kafka_2.12-1.1.0/config/producer.properties	(date 1553176400164)
@@ -1,0 +1,0 @@
Index: bin/kafka_2.12-1.1.0/config/connect-log4j.properties
===================================================================
--- bin/kafka_2.12-1.1.0/config/connect-log4j.properties	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/bin/kafka_2.12-1.1.0/config/connect-log4j.properties	(date 1553176400163)
@@ -1,0 +1,0 @@
Index: bin/kafka_2.12-1.1.0/config/connect-file-sink.properties
===================================================================
--- bin/kafka_2.12-1.1.0/config/connect-file-sink.properties	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/bin/kafka_2.12-1.1.0/config/connect-file-sink.properties	(date 1553176400163)
@@ -1,0 +1,0 @@
Index: bin/kafka_2.12-1.1.0/config/connect-distributed.properties
===================================================================
--- bin/kafka_2.12-1.1.0/config/connect-distributed.properties	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/bin/kafka_2.12-1.1.0/config/connect-distributed.properties	(date 1553176400163)
@@ -1,0 +1,0 @@
Index: src/file2.json
===================================================================
--- src/file2.json	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/src/file2.json	(date 1568933947147)
@@ -1,0 +1,0 @@
Index: prometheus/prometheus.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- prometheus/prometheus.yml	(date 1571916775379)
+++ prometheus/prometheus.yml	(date 1571916775379)
@@ -0,0 +1,24 @@
+# my global config
+global:
+  scrape_interval:     1s # By default, scrape targets every 15 seconds.
+  evaluation_interval: 1s # By default, scrape targets every 15 seconds.
+  # scrape_timeout is set to the global default (10s).
+
+  # Attach these labels to any time series or alerts when communicating with
+  # external systems (federation, remote storage, Alertmanager).
+  external_labels:
+    monitor: 'my-project'
+
+# A scrape configuration containing exactly one endpoint to scrape:
+# Here it's Prometheus itself.
+scrape_configs:
+  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
+
+  - job_name: 'prometheus'
+
+    # Override the global default and scrape targets from this job every 5 seconds.
+    scrape_interval: 5s
+
+    static_configs:
+      - targets: ['validator_1:9090']
+
Index: src/file.json
===================================================================
--- src/file.json	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/src/file.json	(date 1568931741869)
@@ -1,0 +1,0 @@
Index: src/testRedis.py
===================================================================
--- src/testRedis.py	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/src/testRedis.py	(date 1571915465714)
@@ -134,7 +134,7 @@
   ]
 }'''
 
-rawData2 = {"timePlatform": 1527685363267, "timeDevice": 1527685363266, "activityInfo": 300, "image": "test" }
+rawData2 = {"timePlatform": 1527685363267, "timeDevice": 1527685363266, "activityInfo": 303, "image": "test" }
 
 
 logging.basicConfig(level=logging.INFO)
@@ -143,14 +143,15 @@
 consumer = KafkaConsumer(bootstrap_servers=config.get('kafka_server') + ":" + config.get('kafka_port'),
                          auto_offset_reset='earliest',
                          consumer_timeout_ms=1000)
-schema_registry = CachedSchemaRegistryClient(url='http://' + config.get('kafka_schema') + ':' + config.get('kafka_schema_port'))
-serializer = MessageSerializer(schema_registry)
-value_schema = avro.loads(schemaSF3)
-avroProducer = AvroProducer({
-    'bootstrap.servers': config.get('kafka_server'),
-    'schema.registry.url': 'http://' + config.get('kafka_schema') + ':' + config.get('kafka_schema_port'),
-    'message.max.bytes': 15000000
-}, default_value_schema=value_schema)
+# schema_registry = CachedSchemaRegistryClient(url='http://' + config.get('kafka_schema') + ':' + config.get('kafka_schema_port'))
+# serializer = MessageSerializer(schema_registry)
+# value_schema = avro.loads(schemaSF3)
+# avroProducer = AvroProducer({
+#     'bootstrap.servers': config.get('kafka_server'),
+#     'schema.registry.url': 'http://' + config.get('kafka_schema') + ':' + config.get('kafka_schema_port'),
+#     'message.max.bytes': 15000000
+# }, default_value_schema=value_schema)
+producer = KafkaProducer(bootstrap_servers=config.get('kafka_server') + ':9092')
 
 start_time = time.time()
 #device_time_device = 1530523171000
@@ -251,15 +252,25 @@
 
     '''
     log.info("[generateMessagesSmall] start")
-    for i in xrange(10):
+    for i in xrange(20000):
         # rawData2['term_id'] = i
         log.info("[generateMessagesSmall] rawData2: " + str(rawData2))
         sendKafka(rawData2)
     log.info("[generateMessagesSmall] end")
     print("[generateMessagesSmall] flush --- %s seconds ---" % (time.time() - start_time))
-    avroProducer.flush()
+    producer.flush()
     print("[generateMessagesSmall] --- %s seconds ---" % (time.time() - start_time))
 
+def sendKafkaAvro(msg):
+    '''
+
+    Send message to topic
+
+    '''
+
+    #res = avroProducer.produce(topic=config.get('topic'), value=msg)
+    log.debug("[KafkaDriver][send] produce result: " + str(res))
+    #time.sleep(1)
 
 def sendKafka(msg):
     '''
@@ -267,8 +278,9 @@
     Send message to topic
 
     '''
-    res = avroProducer.produce(topic=config.get('topic'), value=msg)
-    log.debug("[KafkaDriver][send] produce result: " + str(res))
+    log.debug("[sendKafka][send] msg: " + str(msg))
+    res = producer.send(config.get('topic'), key=None, value=str(msg))
+    log.debug("[sendKafka][send] produce result: " + str(res))
     #time.sleep(1)
 
 def getMessages():
@@ -349,7 +361,7 @@
     Testing generating messages
 
     '''
-    delete_topic(config.get('topic'))
+    #delete_topic(config.get('topic'))
     print("[generateMessagesSmall] --- %s seconds ---" % (time.time() - start_time))
     generateMessagesSmall()
     print("[get_last_offset] --- %s seconds ---" % (time.time() - start_time))
Index: validator/Dockerfile
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>FROM openjdk:11\nCOPY ./time-to-start.sh /app/time-to-start.sh\nCOPY ./target /app/\nCOPY ./src/main/resources /app/\n\nEXPOSE 8080\n\nENTRYPOINT [\"bash\", \"/app/time-to-start.sh\"]\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- validator/Dockerfile	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ validator/Dockerfile	(date 1571907511570)
@@ -1,7 +1,6 @@
 FROM openjdk:11
 COPY ./time-to-start.sh /app/time-to-start.sh
 COPY ./target /app/
-COPY ./src/main/resources /app/
 
 EXPOSE 8080
 
Index: bin/kafka_2.12-1.1.0/bin/kafka-topics.sh
===================================================================
--- bin/kafka_2.12-1.1.0/bin/kafka-topics.sh	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/bin/kafka_2.12-1.1.0/bin/kafka-topics.sh	(date 1553176400161)
@@ -1,0 +1,0 @@
Index: bin/kafka_2.12-1.1.0/bin/connect-standalone.sh
===================================================================
--- bin/kafka_2.12-1.1.0/bin/connect-standalone.sh	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/bin/kafka_2.12-1.1.0/bin/connect-standalone.sh	(date 1553176400158)
@@ -1,0 +1,0 @@
Index: bin/kafka_2.12-1.1.0/bin/kafka-broker-api-versions.sh
===================================================================
--- bin/kafka_2.12-1.1.0/bin/kafka-broker-api-versions.sh	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/bin/kafka_2.12-1.1.0/bin/kafka-broker-api-versions.sh	(date 1553176400158)
@@ -1,0 +1,0 @@
Index: bin/kafka_2.12-1.1.0/bin/kafka-console-consumer.sh
===================================================================
--- bin/kafka_2.12-1.1.0/bin/kafka-console-consumer.sh	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/bin/kafka_2.12-1.1.0/bin/kafka-console-consumer.sh	(date 1553176400158)
@@ -1,0 +1,0 @@
Index: bin/kafka_2.12-1.1.0/bin/kafka-console-producer.sh
===================================================================
--- bin/kafka_2.12-1.1.0/bin/kafka-console-producer.sh	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/bin/kafka_2.12-1.1.0/bin/kafka-console-producer.sh	(date 1553176400159)
@@ -1,0 +1,0 @@
Index: bin/kafka_2.12-1.1.0/bin/kafka-consumer-groups.sh
===================================================================
--- bin/kafka_2.12-1.1.0/bin/kafka-consumer-groups.sh	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/bin/kafka_2.12-1.1.0/bin/kafka-consumer-groups.sh	(date 1553176400159)
@@ -1,0 +1,0 @@
Index: bin/kafka_2.12-1.1.0/bin/kafka-delegation-tokens.sh
===================================================================
--- bin/kafka_2.12-1.1.0/bin/kafka-delegation-tokens.sh	(revision 795ec62d5954d5089ea4ef7885c5bc5c0a5c29e7)
+++ python/bin/kafka_2.12-1.1.0/bin/kafka-delegation-tokens.sh	(date 1553176400159)
@@ -1,0 +1,0 @@
